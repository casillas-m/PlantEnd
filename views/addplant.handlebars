<div id="wrapper">
    <div id="main">
        <section>
            <div class="inner">
                <h3>Form</h3>
                <p>Do you have a photo or scientific name? Try the autocomplete feature.</p>
                <form method="post" action="#">
                    <div class="row gtr-uniform">
                        <div class="col-6 col-12-xsmall">
                            <input type="text" name="demo-name" id="sci_name" value="" placeholder="Scientific name" />
                        </div>
                        <div class="col-6 col-12-xsmall" style="display: flex;">
                            <label for="file_path" class="button icon solid fa-upload">Photo</label>
                            <input type="file" name="file_path" id="file_path" value="" placeholder="Photo path"
                                style="display:none; width: 100%; margin-left:5px;" />
                            <input type="text" name="" id="file_show" value="" placeholder="Photo path"
                                style="display:inline; width: 100%; margin-left:5px;" disabled />
                            <input type="text" id="file_url" style="display:none" />
                        </div>
                        <!-- Break -->
                        <div class="col-4 col-12-xsmall">
                            <input type="text" name="demo-name" id="common_name" value="" placeholder="Friendly name" />
                        </div>
                        <div class="col-4 col-12-xsmall">
                            <input type="text" name="demo-name" id="light_needed" value="" placeholder="Light needed" />
                        </div>
                        <div class="col-4 col-12-xsmall">
                            <input type="text" name="demo-name" id="hum_needed" value=""
                                placeholder="Humidity needed" />
                        </div>
                        <!-- Break -->
                        <div class="col-4 col-12-small">
                            <input type="checkbox" id="enpoint_check" name="demo-copy" onclick="endpoint()">
                            <label for="enpoint_check">Automatic watering</label>
                        </div>
                        <div class="col-4 col-12-xsmall">
                            <input type="text" name="demo-name" value="" id="endpoint_iot" placeholder="Endpoint URL"
                                disabled />
                        </div>
                        <div class="col-4 col-12-xsmall">
                            <select name="" id="soil">
                                <option value="Silt Soil">Silt Soil</option>
                                <option value="Peat Soil">Peat Soil</option>
                                <option value="Clay Soil">Clay Soil</option>
                                <option value="Sandy soil">Sandy soil</option>
                            </select>
                        </div>
                        <!-- Break -->
                        <div class="col-12">
                            <ul class="actions">
                                <li><a class="button" onclick="auto()">Autocomplete</a></li>
                                <li><a class="button primary" onclick="done()">Done</a></li>
                            </ul>
                        </div>
                    </div>
                </form>
            </div>
        </section>
    </div>
    {{{footer}}}
</div>

<script>
    if (localStorage.getItem("token") != null) {
        try {
            let jwt_decoded = jwt_decode(localStorage.getItem("token"));
            document.querySelector("#header_name").innerHTML = `${jwt_decoded.name}'s new plant!`
        } catch (e) {
            console.log("JWT Error")
            console.log(e)
        }
    }

    function endpoint() {
        if (document.querySelector("#enpoint_check").checked) document.querySelector("#endpoint_in").removeAttribute("disabled")
        else document.querySelector("#endpoint_in").setAttribute("disabled", "")
    }

    function file(event) {
        document.querySelector("#spinner").removeAttribute("style")

        document.querySelector("#file_show").value = document.querySelector("#file_path").value.split('\\').pop()
        const files = event.target.files
        const formData = new FormData()
        formData.append('myFile', files[0])

        fetch('{{{URL_BACK}}}/image', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                //console.log(data.path)
                document.querySelector("#spinner").setAttribute("style", "display:none")
                document.querySelector("#sci_name").value = data.name
                document.querySelector("#sci_name").setAttribute("disabled", "")
                document.querySelector("#file_url").value = data.path
            })
            .catch(error => {
                console.error(error)
            })
    }
    document.querySelector('#file_path').addEventListener('change', event => {
        file(event)
    })

    function auto() {
        document.querySelector("#spinner").removeAttribute("style")

        fetch(`{{{URL_BACK}}}/plants?token=${localStorage.getItem("token")}&plant=${document.querySelector("#sci_name").value}`, {
            method: 'GET'
        })
            .then(response => {
                document.querySelector("#spinner").setAttribute("style", "display:none")
                if (response.status == 200) return response.json()
                else {
                    if (response.status == 400) toastr.error('Missing Information', 'Error:')
                    if (response.status == 401) toastr.error('Invalid JWT', 'Error:')
                    throw "400s error"
                }
            })
            .then(data => {
                document.querySelector("#light_needed").value = data.light
                document.querySelector("#hum_needed").value = data.hum
            })
            .catch(error => {
                console.log(error)
            })
    }

    function done() {
        document.querySelector("#spinner").removeAttribute("style")
        let forma = {
            token: localStorage.getItem("token"),
            plant_name: document.querySelector("#sci_name").value,
            img_url: document.querySelector("#file_url").value,
            common_name: document.querySelector("#common_name").value,
            light_needed: document.querySelector("#light_needed").value,
            hum_needed: document.querySelector("#hum_needed").value,
            endpoint_iot: document.querySelector("#endpoint_iot").value,
            soil: document.querySelector("#soil").value,
        }
        fetch('{{{URL_BACK}}}/plants', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(forma)
        })
            .then(response => {
                document.querySelector("#spinner").setAttribute("style", "display:none")
                if (response.status == 200) return response
                else {
                    if (response.status == 400) toastr.error('Missing Information', 'Error:')
                    if (response.status == 401) toastr.error('Invalid JWT', 'Error:')
                    throw "400s error"
                }
            })
            .then(data => {
                toastr.success('Plant added', 'Success:')
            })
            .catch(error => {
                console.log(error)
            })
    }
</script>